<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Profile | Nodot Academy</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
  <link rel="stylesheet" href="/css/style.css">
  <style>
    .profile-container {
      max-width: 800px;
      margin: 20px auto;
      padding: 20px;
      background: white;
      border-radius: 10px;
      box-shadow: 0 0 15px rgba(0, 0, 0, 0.08);
      width: 92%;
    }
    
    .profile-header {
      display: flex;
      align-items: center;
      margin-bottom: 30px;
      padding-bottom: 20px;
      border-bottom: 1px solid #eee;
    }
    
    .profile-avatar {
      width: 100px;
      height: 100px;
      background: #5624d0;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 2.5rem;
      font-weight: 600;
      margin-right: 20px;
      flex-shrink: 0;
    }
    
    .profile-title h1 {
      font-size: 1.8rem;
      margin: 0 0 5px;
      color: #1c1d1f;
      word-break: break-word;
    }
    
    .profile-title p {
      font-size: 1rem;
      color: #6a6f73;
      margin: 0;
    }
    
    .profile-section {
      margin-bottom: 30px;
    }
    
    .profile-section h2 {
      font-size: 1.3rem;
      color: #1c1d1f;
      margin-bottom: 15px;
      padding-bottom: 10px;
      border-bottom: 1px solid #eee;
    }
    
    .profile-info {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 20px;
    }
    
    .info-item {
      margin-bottom: 15px;
      position: relative;
    }
    
    .info-item label {
      display: block;
      font-size: 0.9rem;
      color: #6a6f73;
      margin-bottom: 5px;
    }
    
    .info-item p {
      font-size: 1.1rem;
      margin: 0;
      color: #1c1d1f;
      word-break: break-word;
    }
    
    .edit-icon {
      position: absolute;
      right: 0;
      top: 5px;
      color: #5624d0;
      cursor: pointer;
      font-size: 1rem;
      opacity: 0.7;
      transition: opacity 0.2s;
    }
    
    .edit-icon:hover {
      opacity: 1;
    }
    
    .action-buttons {
      display: flex;
      gap: 15px;
      margin-top: 20px;
    }
    
    .profile-btn {
      padding: 10px 20px;
      border-radius: 4px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.2s;
      text-decoration: none;
      text-align: center;
      flex: 1;
    }
    
    .primary-btn {
      background: #5624d0;
      color: white;
      border: none;
    }
    
    .primary-btn:hover {
      background: #401b9c;
    }
    
    .secondary-btn {
      background: white;
      color: #1c1d1f;
      border: 1px solid #d1d7dc;
    }
    
    .secondary-btn:hover {
      background: #f7f9fa;
    }
    
    .stats-container {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 20px;
      margin-bottom: 30px;
    }
    
    .stat-card {
      background: #f7f9fa;
      padding: 20px;
      border-radius: 8px;
      text-align: center;
    }
    
    .stat-number {
      font-size: 2rem;
      font-weight: 700;
      color: #5624d0;
      margin-bottom: 5px;
    }
    
    .stat-label {
      font-size: 0.9rem;
      color: #6a6f73;
    }
    
    /* Modal styles */
    .modal-overlay {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(0, 0, 0, 0.5);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 1000;
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s;
    }
    
    .modal-overlay.active {
      opacity: 1;
      visibility: visible;
    }
    
    .modal-container {
      background-color: white;
      padding: 20px;
      border-radius: 8px;
      width: 90%;
      max-width: 500px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      transform: translateY(-20px);
      transition: transform 0.3s;
    }
    
    .modal-overlay.active .modal-container {
      transform: translateY(0);
    }
    
    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
      padding-bottom: 10px;
      border-bottom: 1px solid #eee;
    }
    
    .modal-title {
      font-size: 1.3rem;
      color: #1c1d1f;
      font-weight: 600;
    }
    
    .modal-close {
      background: none;
      border: none;
      font-size: 1.5rem;
      cursor: pointer;
      color: #6a6f73;
    }
    
    .form-group {
      margin-bottom: 20px;
    }
    
    .form-group label {
      display: block;
      margin-bottom: 8px;
      font-size: 0.9rem;
      color: #1c1d1f;
    }
    
    .form-control {
      width: 100%;
      padding: 10px 15px;
      border: 1px solid #d1d7dc;
      border-radius: 4px;
      font-size: 1rem;
    }
    
    .form-control:focus {
      outline: none;
      border-color: #5624d0;
      box-shadow: 0 0 0 2px rgba(86, 36, 208, 0.1);
    }
    
    .form-actions {
      display: flex;
      justify-content: flex-end;
      gap: 10px;
      margin-top: 20px;
    }
    
    .form-actions button {
      padding: 10px 20px;
      border-radius: 4px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.2s;
    }
    
    .btn-cancel {
      background: white;
      color: #1c1d1f;
      border: 1px solid #d1d7dc;
    }
    
    .btn-cancel:hover {
      background: #f7f9fa;
    }
    
    .btn-save {
      background: #5624d0;
      color: white;
      border: none;
    }
    
    .btn-save:hover {
      background: #401b9c;
    }
    
    .error-message {
      color: #d63031;
      font-size: 0.85rem;
      margin-top: 5px;
      display: none;
    }
    
    .error-message.show {
      display: block;
    }
    
    /* Alert styles */
    .alert {
      padding: 15px;
      margin-bottom: 20px;
      border-radius: 4px;
      position: relative;
      animation: fadeIn 0.3s;
    }
    
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(-10px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    .alert-success {
      background-color: #ecf8f3;
      color: #3cb371;
      border: 1px solid #d1e7dd;
    }
    
    .alert-error {
      background-color: #fceef0;
      color: #d63031;
      border: 1px solid #f5c2c7;
    }
    
    .alert-close {
      position: absolute;
      right: 15px;
      top: 15px;
      background: none;
      border: none;
      font-size: 1.2rem;
      line-height: 1;
      cursor: pointer;
      opacity: 0.7;
      transition: opacity 0.2s;
    }
    
    .alert-close:hover {
      opacity: 1;
    }
    
    @media (max-width: 768px) {
      .profile-info {
        grid-template-columns: 1fr;
      }
      
      .stats-container {
        grid-template-columns: 1fr;
      }
      
      .profile-header {
        flex-direction: column;
        text-align: center;
      }
      
      .profile-avatar {
        margin-right: 0;
        margin-bottom: 15px;
      }
      
      .action-buttons {
        flex-direction: column;
      }
    }
    
    @media (max-width: 480px) {
      .profile-container {
        padding: 15px;
        margin: 10px auto;
      }
      
      .profile-avatar {
        width: 80px;
        height: 80px;
        font-size: 2rem;
      }
      
      .profile-title h1 {
        font-size: 1.5rem;
      }
      
      .profile-title p {
        font-size: 0.9rem;
      }
      
      .stat-number {
        font-size: 1.5rem;
      }
      
      .stat-label {
        font-size: 0.8rem;
      }
      
      .stat-card {
        padding: 15px 10px;
      }
      
      .profile-btn {
        padding: 8px 15px;
        font-size: 0.9rem;
      }
      
      .profile-section h2 {
        font-size: 1.2rem;
      }
      
      .info-item p {
        font-size: 1rem;
      }
      
      .modal-container {
        padding: 15px;
      }
      
      .modal-title {
        font-size: 1.2rem;
      }
      
      .form-actions button {
        padding: 8px 15px;
        font-size: 0.9rem;
      }
    }
  </style>
</head>
<body>
  <%- include('partials/header') %>
  
  <div class="profile-container">
    <% if (success) { %>
      <div class="alert alert-success">
        <% if (success === 'password-updated') { %>
          Your password has been changed successfully.
        <% } %>
        <button class="alert-close">&times;</button>
      </div>
    <% } %>
    
    <% if (error) { %>
      <div class="alert alert-error">
        <% if (error === 'update-failed') { %>
          Something went wrong. Please try again.
        <% } else if (error === 'missing-fields') { %>
          Please fill all required fields.
        <% } else if (error === 'password-too-short') { %>
          Password must be at least 8 characters.
        <% } else if (error === 'passwords-dont-match') { %>
          Passwords do not match.
        <% } else if (error === 'incorrect-password') { %>
          Current password is incorrect.
        <% } else if (error === 'user-not-found') { %>
          User not found.
        <% } %>
        <button class="alert-close">&times;</button>
      </div>
    <% } %>
    
    <div class="profile-header">
      <div class="profile-avatar">
        <%= user.name.charAt(0).toUpperCase() %>
      </div>
      <div class="profile-title">
        <h1><%= user.name %></h1>
        <p>Member since <%= new Date(user.joined_at || Date.now()).toLocaleDateString() %></p>
      </div>
    </div>
    
    <div class="stats-container">
      <div class="stat-card">
        <div class="stat-number"><%= courseCount %></div>
        <div class="stat-label">Courses Enrolled</div>
      </div>
      <div class="stat-card">
        <div class="stat-number"><%= completedCount %></div>
        <div class="stat-label">Courses Completed</div>
      </div>
      <div class="stat-card">
        <div class="stat-number"><%= certificateCount %></div>
        <div class="stat-label">Certificates Earned</div>
      </div>
    </div>
    
    <div class="profile-section">
      <h2>Personal Information</h2>
      <div class="profile-info">
        <div class="info-item">
          <label>Full Name</label>
          <p><%= user.name %></p>
        </div>
        <div class="info-item">
          <label>Email</label>
          <p><%= user.email %></p>
        </div>
        <div class="info-item">
          <label>Mobile</label>
          <p><%= user.mobile %></p>
        </div>
        <div class="info-item">
          <label>Password</label>
          <p>••••••••</p>
          <i class="bi bi-pencil-square edit-icon" id="editPasswordBtn"></i>
        </div>
      </div>
    </div>
    
    <div class="action-buttons">
      <a href="/mylearning" class="profile-btn primary-btn">My Learning</a>
      <a href="/purchase-history" class="profile-btn primary-btn">Purchase History</a>
    </div>
  </div>
  
  <!-- Password Change Modal -->
  <div class="modal-overlay" id="passwordModal">
    <div class="modal-container">
      <div class="modal-header">
        <h3 class="modal-title">Change Password</h3>
        <button class="modal-close" id="closePasswordModal">&times;</button>
      </div>
      <form id="passwordForm" action="/update-password" method="POST">
        <div class="form-group">
          <label for="currentPassword">Current Password</label>
          <input type="password" id="currentPassword" name="currentPassword" class="form-control" required>
          <div class="error-message" id="currentPasswordError">Please enter your current password</div>
        </div>
        <div class="form-group">
          <label for="newPassword">New Password</label>
          <input type="password" id="newPassword" name="newPassword" class="form-control" required>
          <div class="error-message" id="newPasswordError">Password must be at least 8 characters</div>
        </div>
        <div class="form-group">
          <label for="confirmPassword">Confirm New Password</label>
          <input type="password" id="confirmPassword" name="confirmPassword" class="form-control" required>
          <div class="error-message" id="confirmPasswordError">Passwords do not match</div>
        </div>
        <div class="form-actions">
          <button type="button" class="btn-cancel" id="cancelPasswordBtn">Cancel</button>
          <button type="submit" class="btn-save">Update Password</button>
        </div>
      </form>
    </div>
  </div>
  
  <%- include('partials/footer') %>
  
  <script>
    // Elements
    const passwordModal = document.getElementById('passwordModal');
    const editPasswordBtn = document.getElementById('editPasswordBtn');
    const closePasswordModal = document.getElementById('closePasswordModal');
    const cancelPasswordBtn = document.getElementById('cancelPasswordBtn');
    const passwordForm = document.getElementById('passwordForm');
    const currentPassword = document.getElementById('currentPassword');
    const newPassword = document.getElementById('newPassword');
    const confirmPassword = document.getElementById('confirmPassword');
    const currentPasswordError = document.getElementById('currentPasswordError');
    const newPasswordError = document.getElementById('newPasswordError');
    const confirmPasswordError = document.getElementById('confirmPasswordError');
    
    // Open modal
    editPasswordBtn.addEventListener('click', () => {
      passwordModal.classList.add('active');
      currentPassword.focus();
    });
    
    // Close modal
    function closePasswordModalFn() {
      passwordModal.classList.remove('active');
      currentPasswordError.classList.remove('show');
      newPasswordError.classList.remove('show');
      confirmPasswordError.classList.remove('show');
      passwordForm.reset();
    }
    
    closePasswordModal.addEventListener('click', closePasswordModalFn);
    cancelPasswordBtn.addEventListener('click', closePasswordModalFn);
    
    // Close modal when clicking outside
    window.addEventListener('click', (e) => {
      if (e.target === passwordModal) closePasswordModalFn();
    });
    
    // Form validations
    passwordForm.addEventListener('submit', (e) => {
      let isValid = true;
      
      if (currentPassword.value.trim() === '') {
        currentPasswordError.classList.add('show');
        currentPassword.focus();
        isValid = false;
      } else {
        currentPasswordError.classList.remove('show');
      }
      
      if (newPassword.value.length < 8) {
        newPasswordError.classList.add('show');
        if (isValid) newPassword.focus();
        isValid = false;
      } else {
        newPasswordError.classList.remove('show');
      }
      
      if (newPassword.value !== confirmPassword.value) {
        confirmPasswordError.classList.add('show');
        if (isValid) confirmPassword.focus();
        isValid = false;
      } else {
        confirmPasswordError.classList.remove('show');
      }
      
      if (!isValid) {
        e.preventDefault();
      }
    });
    
    // Handle alert messages
    document.querySelectorAll('.alert-close').forEach(button => {
      button.addEventListener('click', () => {
        const alert = button.closest('.alert');
        alert.style.opacity = '0';
        alert.style.transform = 'translateY(-10px)';
        setTimeout(() => {
          alert.style.display = 'none';
        }, 300);
      });
    });
    
    // Remove query parameters from URL after alerts are displayed
    if (window.location.search) {
      const urlWithoutParams = window.location.pathname;
      window.history.replaceState({}, document.title, urlWithoutParams);
    }
  </script>
</body>
</html> 